   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"aic.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	AIC_ConfigureIT
  19              	AIC_ConfigureIT:
  20              	.LFB283:
  21              		.file 1 "board/peripherals/aic/aic.c"
   1:board/peripherals/aic/aic.c **** /* ----------------------------------------------------------------------------
   2:board/peripherals/aic/aic.c ****  *         ATMEL Microcontroller Software Support 
   3:board/peripherals/aic/aic.c ****  * ----------------------------------------------------------------------------
   4:board/peripherals/aic/aic.c ****  * Copyright (c) 2008, Atmel Corporation
   5:board/peripherals/aic/aic.c ****  *
   6:board/peripherals/aic/aic.c ****  * All rights reserved.
   7:board/peripherals/aic/aic.c ****  *
   8:board/peripherals/aic/aic.c ****  * Redistribution and use in source and binary forms, with or without
   9:board/peripherals/aic/aic.c ****  * modification, are permitted provided that the following conditions are met:
  10:board/peripherals/aic/aic.c ****  *
  11:board/peripherals/aic/aic.c ****  * - Redistributions of source code must retain the above copyright notice,
  12:board/peripherals/aic/aic.c ****  * this list of conditions and the disclaimer below.
  13:board/peripherals/aic/aic.c ****  *
  14:board/peripherals/aic/aic.c ****  * Atmel's name may not be used to endorse or promote products derived from
  15:board/peripherals/aic/aic.c ****  * this software without specific prior written permission.
  16:board/peripherals/aic/aic.c ****  *
  17:board/peripherals/aic/aic.c ****  * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
  18:board/peripherals/aic/aic.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  19:board/peripherals/aic/aic.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  20:board/peripherals/aic/aic.c ****  * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:board/peripherals/aic/aic.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  22:board/peripherals/aic/aic.c ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  23:board/peripherals/aic/aic.c ****  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  24:board/peripherals/aic/aic.c ****  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  25:board/peripherals/aic/aic.c ****  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  26:board/peripherals/aic/aic.c ****  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:board/peripherals/aic/aic.c ****  * ----------------------------------------------------------------------------
  28:board/peripherals/aic/aic.c ****  */
  29:board/peripherals/aic/aic.c **** 
  30:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  31:board/peripherals/aic/aic.c **** //         Headers
  32:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  33:board/peripherals/aic/aic.c **** 
  34:board/peripherals/aic/aic.c **** #include "aic.h"
  35:board/peripherals/aic/aic.c **** #include <board.h>
  36:board/peripherals/aic/aic.c **** 
  37:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  38:board/peripherals/aic/aic.c **** //         Global functions
  39:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  40:board/peripherals/aic/aic.c **** 
  41:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  42:board/peripherals/aic/aic.c **** /// Configures an interrupt in the AIC. The interrupt is identified by its
  43:board/peripherals/aic/aic.c **** /// source (AT91C_ID_xxx) and is configured to use the specified mode and
  44:board/peripherals/aic/aic.c **** /// interrupt handler function. Mode is the value that will be put in AIC_SMRx
  45:board/peripherals/aic/aic.c **** /// and the function address will be set in AIC_SVRx.
  46:board/peripherals/aic/aic.c **** /// The interrupt is disabled before configuration, so it is useless
  47:board/peripherals/aic/aic.c **** /// to do it before calling this function. When AIC_ConfigureIT returns, the
  48:board/peripherals/aic/aic.c **** /// interrupt will always be disabled and cleared; it must be enabled by a
  49:board/peripherals/aic/aic.c **** /// call to AIC_EnableIT().
  50:board/peripherals/aic/aic.c **** /// \param source  Interrupt source to configure.
  51:board/peripherals/aic/aic.c **** /// \param mode  Triggering mode and priority of the interrupt.
  52:board/peripherals/aic/aic.c **** /// \param handler  Interrupt handler function.
  53:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  54:board/peripherals/aic/aic.c **** void AIC_ConfigureIT(
  55:board/peripherals/aic/aic.c ****     unsigned int source,
  56:board/peripherals/aic/aic.c ****     unsigned int mode,
  57:board/peripherals/aic/aic.c ****     void (*handler)(void))
  58:board/peripherals/aic/aic.c **** {
  22              		.loc 1 58 0
  23              		.cfi_startproc
  24              		@ Function supports interworking.
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27              		@ link register save eliminated.
  28              	.LVL0:
  59:board/peripherals/aic/aic.c ****     // Disable the interrupt first
  60:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_IDCR = 1 << source;
  29              		.loc 1 60 0
  30 0000 01C0A0E3 		mov	ip, #1
  31 0004 1CC0A0E1 		mov	ip, ip, asl r0
  58:board/peripherals/aic/aic.c **** {
  32              		.loc 1 58 0
  33 0008 04402DE5 		str	r4, [sp, #-4]!
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
  37              		.loc 1 60 0
  38 000c 0030E0E3 		mvn	r3, #0
  61:board/peripherals/aic/aic.c **** 
  62:board/peripherals/aic/aic.c ****     // Configure mode and handler
  63:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_SMR[source] = mode;
  64:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_SVR[source] = (unsigned int) handler;
  39              		.loc 1 64 0
  40 0010 0041A0E1 		mov	r4, r0, asl #2
  63:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_SMR[source] = mode;
  41              		.loc 1 63 0
  42 0014 030084E0 		add	r0, r4, r3
  43              	.LVL1:
  60:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_IDCR = 1 << source;
  44              		.loc 1 60 0
  45 0018 DBCE03E5 		str	ip, [r3, #-3803]
  46              		.loc 1 64 0
  47 001c 7F4084E2 		add	r4, r4, #127
  63:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_SMR[source] = mode;
  48              		.loc 1 63 0
  49 0020 FF1F00E5 		str	r1, [r0, #-4095]
  50              		.loc 1 64 0
  51 0024 FF2F04E5 		str	r2, [r4, #-4095]
  65:board/peripherals/aic/aic.c **** 
  66:board/peripherals/aic/aic.c ****     // Clear interrupt
  67:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_ICCR = 1 << source;
  52              		.loc 1 67 0
  53 0028 D7CE03E5 		str	ip, [r3, #-3799]
  68:board/peripherals/aic/aic.c **** }
  54              		.loc 1 68 0
  55 002c 1000BDE8 		ldmfd	sp!, {r4}
  56 0030 1EFF2FE1 		bx	lr
  57              		.cfi_endproc
  58              	.LFE283:
  60              		.align	2
  61              		.global	AIC_EnableIT
  63              	AIC_EnableIT:
  64              	.LFB284:
  69:board/peripherals/aic/aic.c **** 
  70:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  71:board/peripherals/aic/aic.c **** /// Enables interrupts coming from the given (unique) source (AT91C_ID_xxx).
  72:board/peripherals/aic/aic.c **** /// \param source  Interrupt source to enable.
  73:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  74:board/peripherals/aic/aic.c **** void AIC_EnableIT(unsigned int source)
  75:board/peripherals/aic/aic.c **** {
  65              		.loc 1 75 0
  66              		.cfi_startproc
  67              		@ Function supports interworking.
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL2:
  76:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_IECR = 1 << source;
  72              		.loc 1 76 0
  73 0034 0130A0E3 		mov	r3, #1
  74 0038 1300A0E1 		mov	r0, r3, asl r0
  75              	.LVL3:
  76 003c 0020E0E3 		mvn	r2, #0
  77 0040 DF0E02E5 		str	r0, [r2, #-3807]
  78 0044 1EFF2FE1 		bx	lr
  79              		.cfi_endproc
  80              	.LFE284:
  82              		.align	2
  83              		.global	AIC_DisableIT
  85              	AIC_DisableIT:
  86              	.LFB285:
  77:board/peripherals/aic/aic.c **** }
  78:board/peripherals/aic/aic.c **** 
  79:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  80:board/peripherals/aic/aic.c **** /// Disables interrupts coming from the given (unique) source (AT91C_ID_xxx).
  81:board/peripherals/aic/aic.c **** /// \param source  Interrupt source to enable.
  82:board/peripherals/aic/aic.c **** //------------------------------------------------------------------------------
  83:board/peripherals/aic/aic.c **** void AIC_DisableIT(unsigned int source)
  84:board/peripherals/aic/aic.c **** {
  87              		.loc 1 84 0
  88              		.cfi_startproc
  89              		@ Function supports interworking.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL4:
  85:board/peripherals/aic/aic.c ****     AT91C_BASE_AIC->AIC_IDCR = 1 << source;
  94              		.loc 1 85 0
  95 0048 0130A0E3 		mov	r3, #1
  96 004c 1300A0E1 		mov	r0, r3, asl r0
  97              	.LVL5:
  98 0050 0020E0E3 		mvn	r2, #0
  99 0054 DB0E02E5 		str	r0, [r2, #-3803]
 100 0058 1EFF2FE1 		bx	lr
 101              		.cfi_endproc
 102              	.LFE285:
 104              	.Letext0:
 105              		.file 2 "board/AT91SAM7S256.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aic.c
     /tmp/cclcGGuv.s:16     .text:0000000000000000 $a
     /tmp/cclcGGuv.s:19     .text:0000000000000000 AIC_ConfigureIT
     /tmp/cclcGGuv.s:63     .text:0000000000000034 AIC_EnableIT
     /tmp/cclcGGuv.s:85     .text:0000000000000048 AIC_DisableIT
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
