   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"pio.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	PIO_Configure
  19              	PIO_Configure:
  20              	.LFB287:
  21              		.file 1 "board/peripherals/pio/pio.c"
   1:board/peripherals/pio/pio.c **** /* ----------------------------------------------------------------------------
   2:board/peripherals/pio/pio.c ****  *         ATMEL Microcontroller Software Support 
   3:board/peripherals/pio/pio.c ****  * ----------------------------------------------------------------------------
   4:board/peripherals/pio/pio.c ****  * Copyright (c) 2008, Atmel Corporation
   5:board/peripherals/pio/pio.c ****  *
   6:board/peripherals/pio/pio.c ****  * All rights reserved.
   7:board/peripherals/pio/pio.c ****  *
   8:board/peripherals/pio/pio.c ****  * Redistribution and use in source and binary forms, with or without
   9:board/peripherals/pio/pio.c ****  * modification, are permitted provided that the following conditions are met:
  10:board/peripherals/pio/pio.c ****  *
  11:board/peripherals/pio/pio.c ****  * - Redistributions of source code must retain the above copyright notice,
  12:board/peripherals/pio/pio.c ****  * this list of conditions and the disclaimer below.
  13:board/peripherals/pio/pio.c ****  *
  14:board/peripherals/pio/pio.c ****  * Atmel's name may not be used to endorse or promote products derived from
  15:board/peripherals/pio/pio.c ****  * this software without specific prior written permission.
  16:board/peripherals/pio/pio.c ****  *
  17:board/peripherals/pio/pio.c ****  * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
  18:board/peripherals/pio/pio.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  19:board/peripherals/pio/pio.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  20:board/peripherals/pio/pio.c ****  * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:board/peripherals/pio/pio.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  22:board/peripherals/pio/pio.c ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  23:board/peripherals/pio/pio.c ****  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  24:board/peripherals/pio/pio.c ****  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  25:board/peripherals/pio/pio.c ****  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  26:board/peripherals/pio/pio.c ****  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:board/peripherals/pio/pio.c ****  * ----------------------------------------------------------------------------
  28:board/peripherals/pio/pio.c ****  */
  29:board/peripherals/pio/pio.c **** 
  30:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  31:board/peripherals/pio/pio.c **** //         Headers
  32:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  33:board/peripherals/pio/pio.c **** 
  34:board/peripherals/pio/pio.c **** #include "pio.h"
  35:board/peripherals/pio/pio.c **** #include <board.h>
  36:board/peripherals/pio/pio.c **** 
  37:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  38:board/peripherals/pio/pio.c **** //         Local Functions
  39:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  40:board/peripherals/pio/pio.c **** 
  41:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  42:board/peripherals/pio/pio.c **** /// Configures one or more pin(s) of a PIO controller as being controlled by
  43:board/peripherals/pio/pio.c **** /// peripheral A. Optionally, the corresponding internal pull-up(s) can be
  44:board/peripherals/pio/pio.c **** /// enabled.
  45:board/peripherals/pio/pio.c **** /// \param pio  Pointer to a PIO controller.
  46:board/peripherals/pio/pio.c **** /// \param mask  Bitmask of one or more pin(s) to configure.
  47:board/peripherals/pio/pio.c **** /// \param enablePullUp  Indicates if the pin(s) internal pull-up shall be
  48:board/peripherals/pio/pio.c **** ///                      configured.
  49:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  50:board/peripherals/pio/pio.c **** static void PIO_SetPeripheralA(
  51:board/peripherals/pio/pio.c ****     AT91S_PIO *pio,
  52:board/peripherals/pio/pio.c ****     unsigned int mask,
  53:board/peripherals/pio/pio.c ****     unsigned char enablePullUp)
  54:board/peripherals/pio/pio.c **** {
  55:board/peripherals/pio/pio.c ****     // Disable interrupts on the pin(s)
  56:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
  57:board/peripherals/pio/pio.c **** 
  58:board/peripherals/pio/pio.c ****     // Enable the pull-up(s) if necessary
  59:board/peripherals/pio/pio.c ****     if (enablePullUp) {
  60:board/peripherals/pio/pio.c **** 
  61:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
  62:board/peripherals/pio/pio.c ****     }
  63:board/peripherals/pio/pio.c ****     else {
  64:board/peripherals/pio/pio.c **** 
  65:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
  66:board/peripherals/pio/pio.c ****     }
  67:board/peripherals/pio/pio.c **** 
  68:board/peripherals/pio/pio.c ****     // Configure pin
  69:board/peripherals/pio/pio.c ****     pio->PIO_ASR = mask;
  70:board/peripherals/pio/pio.c ****     pio->PIO_PDR = mask;
  71:board/peripherals/pio/pio.c **** }
  72:board/peripherals/pio/pio.c **** 
  73:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  74:board/peripherals/pio/pio.c **** /// Configures one or more pin(s) of a PIO controller as being controlled by
  75:board/peripherals/pio/pio.c **** /// peripheral B. Optionally, the corresponding internal pull-up(s) can be
  76:board/peripherals/pio/pio.c **** /// enabled.
  77:board/peripherals/pio/pio.c **** /// \param pio  Pointer to a PIO controller.
  78:board/peripherals/pio/pio.c **** /// \param mask  Bitmask of one or more pin(s) to configure.
  79:board/peripherals/pio/pio.c **** /// \param enablePullUp  Indicates if the pin(s) internal pull-up shall be
  80:board/peripherals/pio/pio.c **** ///                      configured.
  81:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
  82:board/peripherals/pio/pio.c **** static void PIO_SetPeripheralB(
  83:board/peripherals/pio/pio.c ****     AT91S_PIO *pio,
  84:board/peripherals/pio/pio.c ****     unsigned int mask,
  85:board/peripherals/pio/pio.c ****     unsigned char enablePullUp)
  86:board/peripherals/pio/pio.c **** {
  87:board/peripherals/pio/pio.c ****     // Disable interrupts on the pin(s)
  88:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
  89:board/peripherals/pio/pio.c **** 
  90:board/peripherals/pio/pio.c ****     // Enable the pull-up(s) if necessary
  91:board/peripherals/pio/pio.c ****     if (enablePullUp) {
  92:board/peripherals/pio/pio.c **** 
  93:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
  94:board/peripherals/pio/pio.c ****     }
  95:board/peripherals/pio/pio.c ****     else {
  96:board/peripherals/pio/pio.c **** 
  97:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
  98:board/peripherals/pio/pio.c ****     }
  99:board/peripherals/pio/pio.c **** 
 100:board/peripherals/pio/pio.c ****     // Configure pin
 101:board/peripherals/pio/pio.c ****     pio->PIO_BSR = mask;
 102:board/peripherals/pio/pio.c ****     pio->PIO_PDR = mask;
 103:board/peripherals/pio/pio.c **** }
 104:board/peripherals/pio/pio.c **** 
 105:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 106:board/peripherals/pio/pio.c **** /// Configures one or more pin(s) or a PIO controller as inputs. Optionally,
 107:board/peripherals/pio/pio.c **** /// the corresponding internal pull-up(s) and glitch filter(s) can be
 108:board/peripherals/pio/pio.c **** /// enabled.
 109:board/peripherals/pio/pio.c **** /// \param pio  Pointer to a PIO controller.
 110:board/peripherals/pio/pio.c **** /// \param mask  Bitmask indicating which pin(s) to configure as input(s).
 111:board/peripherals/pio/pio.c **** /// \param enablePullUp  Indicates if the internal pull-up(s) must be enabled.
 112:board/peripherals/pio/pio.c **** /// \param enableFilter  Indicates if the glitch filter(s) must be enabled.
 113:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 114:board/peripherals/pio/pio.c **** static void PIO_SetInput(
 115:board/peripherals/pio/pio.c ****     AT91S_PIO *pio,
 116:board/peripherals/pio/pio.c ****     unsigned int mask,
 117:board/peripherals/pio/pio.c ****     unsigned char enablePullUp,
 118:board/peripherals/pio/pio.c ****     unsigned char enableFilter)
 119:board/peripherals/pio/pio.c **** {
 120:board/peripherals/pio/pio.c ****     // Disable interrupts
 121:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
 122:board/peripherals/pio/pio.c **** 
 123:board/peripherals/pio/pio.c ****     // Enable pull-up(s) if necessary
 124:board/peripherals/pio/pio.c ****     if (enablePullUp) {
 125:board/peripherals/pio/pio.c ****     
 126:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
 127:board/peripherals/pio/pio.c ****     }
 128:board/peripherals/pio/pio.c ****     else {
 129:board/peripherals/pio/pio.c ****     
 130:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
 131:board/peripherals/pio/pio.c ****     }
 132:board/peripherals/pio/pio.c **** 
 133:board/peripherals/pio/pio.c ****     // Enable filter(s) if necessary
 134:board/peripherals/pio/pio.c ****     if (enableFilter) {
 135:board/peripherals/pio/pio.c ****     
 136:board/peripherals/pio/pio.c ****         pio->PIO_IFER = mask;
 137:board/peripherals/pio/pio.c ****     }
 138:board/peripherals/pio/pio.c ****     else {
 139:board/peripherals/pio/pio.c ****     
 140:board/peripherals/pio/pio.c ****         pio->PIO_IFDR = mask;
 141:board/peripherals/pio/pio.c ****     }
 142:board/peripherals/pio/pio.c **** 
 143:board/peripherals/pio/pio.c ****     // Configure pin as input
 144:board/peripherals/pio/pio.c ****     pio->PIO_ODR = mask;
 145:board/peripherals/pio/pio.c ****     pio->PIO_PER = mask;
 146:board/peripherals/pio/pio.c **** }
 147:board/peripherals/pio/pio.c **** 
 148:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 149:board/peripherals/pio/pio.c **** /// Configures one or more pin(s) of a PIO controller as outputs, with the
 150:board/peripherals/pio/pio.c **** /// given default value. Optionally, the multi-drive feature can be enabled
 151:board/peripherals/pio/pio.c **** /// on the pin(s).
 152:board/peripherals/pio/pio.c **** /// \param pio  Pointer to a PIO controller.
 153:board/peripherals/pio/pio.c **** /// \param mask  Bitmask indicating which pin(s) to configure.
 154:board/peripherals/pio/pio.c **** /// \param defaultValue  Default level on the pin(s).
 155:board/peripherals/pio/pio.c **** /// \param enableMultiDrive  Indicates if the pin(s) shall be configured as
 156:board/peripherals/pio/pio.c **** ///                          open-drain.
 157:board/peripherals/pio/pio.c **** /// \param enablePullUp  Indicates if the pin shall have its pull-up activated.
 158:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 159:board/peripherals/pio/pio.c **** static void PIO_SetOutput(
 160:board/peripherals/pio/pio.c ****     AT91S_PIO *pio,
 161:board/peripherals/pio/pio.c ****     unsigned int mask,
 162:board/peripherals/pio/pio.c ****     unsigned char defaultValue,
 163:board/peripherals/pio/pio.c ****     unsigned char enableMultiDrive,
 164:board/peripherals/pio/pio.c ****     unsigned char enablePullUp)
 165:board/peripherals/pio/pio.c **** {
 166:board/peripherals/pio/pio.c ****     // Disable interrupts
 167:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
 168:board/peripherals/pio/pio.c **** 
 169:board/peripherals/pio/pio.c ****     // Enable pull-up(s) if necessary
 170:board/peripherals/pio/pio.c ****     if (enablePullUp) {
 171:board/peripherals/pio/pio.c ****     
 172:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
 173:board/peripherals/pio/pio.c ****     }
 174:board/peripherals/pio/pio.c ****     else {
 175:board/peripherals/pio/pio.c ****     
 176:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
 177:board/peripherals/pio/pio.c ****     }
 178:board/peripherals/pio/pio.c **** 
 179:board/peripherals/pio/pio.c ****     // Enable multi-drive if necessary
 180:board/peripherals/pio/pio.c ****     if (enableMultiDrive) {
 181:board/peripherals/pio/pio.c ****     
 182:board/peripherals/pio/pio.c ****         pio->PIO_MDER = mask;
 183:board/peripherals/pio/pio.c ****     }
 184:board/peripherals/pio/pio.c ****     else {
 185:board/peripherals/pio/pio.c ****     
 186:board/peripherals/pio/pio.c ****         pio->PIO_MDDR = mask;
 187:board/peripherals/pio/pio.c ****     }
 188:board/peripherals/pio/pio.c **** 
 189:board/peripherals/pio/pio.c ****     // Set default value
 190:board/peripherals/pio/pio.c ****     if (defaultValue) {
 191:board/peripherals/pio/pio.c **** 
 192:board/peripherals/pio/pio.c ****         pio->PIO_SODR = mask;
 193:board/peripherals/pio/pio.c ****     }
 194:board/peripherals/pio/pio.c ****     else {
 195:board/peripherals/pio/pio.c **** 
 196:board/peripherals/pio/pio.c ****         pio->PIO_CODR = mask;
 197:board/peripherals/pio/pio.c ****     }
 198:board/peripherals/pio/pio.c **** 
 199:board/peripherals/pio/pio.c ****     // Configure pin(s) as output(s)
 200:board/peripherals/pio/pio.c ****     pio->PIO_OER = mask;
 201:board/peripherals/pio/pio.c ****     pio->PIO_PER = mask;
 202:board/peripherals/pio/pio.c **** }
 203:board/peripherals/pio/pio.c **** 
 204:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 205:board/peripherals/pio/pio.c **** //         Global Functions
 206:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 207:board/peripherals/pio/pio.c **** 
 208:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 209:board/peripherals/pio/pio.c **** /// Configures a list of Pin instances, each of which can either hold a single
 210:board/peripherals/pio/pio.c **** /// pin or a group of pins, depending on the mask value; all pins are configured
 211:board/peripherals/pio/pio.c **** /// by this function. The size of the array must also be provided and is easily
 212:board/peripherals/pio/pio.c **** /// computed using PIO_LISTSIZE whenever its length is not known in advance.
 213:board/peripherals/pio/pio.c **** /// \param list  Pointer to a list of Pin instances.
 214:board/peripherals/pio/pio.c **** /// \param size  Size of the Pin list (calculated using PIO_LISTSIZE).
 215:board/peripherals/pio/pio.c **** /// \return 1 if the pins have been configured properly; otherwise 0.
 216:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 217:board/peripherals/pio/pio.c **** unsigned char PIO_Configure(const Pin *list, unsigned int size)
 218:board/peripherals/pio/pio.c **** {
  22              		.loc 1 218 0
  23              		.cfi_startproc
  24              		@ Function supports interworking.
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27              		@ link register save eliminated.
  28              	.LVL0:
 219:board/peripherals/pio/pio.c ****     // Configure pins
 220:board/peripherals/pio/pio.c ****     while (size > 0) {
  29              		.loc 1 220 0
  30 0000 000051E3 		cmp	r1, #0
 218:board/peripherals/pio/pio.c **** {
  31              		.loc 1 218 0
  32 0004 70002DE9 		stmfd	sp!, {r4, r5, r6}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 6, -4
 217:board/peripherals/pio/pio.c **** unsigned char PIO_Configure(const Pin *list, unsigned int size)
  38              		.loc 1 217 0
  39 0008 0C008012 		addne	r0, r0, #12
  40              	.LVL1:
 221:board/peripherals/pio/pio.c ****     
 222:board/peripherals/pio/pio.c ****         switch (list->type) {
 223:board/peripherals/pio/pio.c ****     
 224:board/peripherals/pio/pio.c ****             case PIO_PERIPH_A:
 225:board/peripherals/pio/pio.c ****                 PIO_SetPeripheralA(list->pio,
 226:board/peripherals/pio/pio.c ****                                    list->mask,
 227:board/peripherals/pio/pio.c ****                                    (list->attribute & PIO_PULLUP) ? 1 : 0);
 228:board/peripherals/pio/pio.c ****                 break;
 229:board/peripherals/pio/pio.c ****     
 230:board/peripherals/pio/pio.c ****             case PIO_PERIPH_B:
 231:board/peripherals/pio/pio.c ****                 PIO_SetPeripheralB(list->pio,
 232:board/peripherals/pio/pio.c ****                                    list->mask,
 233:board/peripherals/pio/pio.c ****                                    (list->attribute & PIO_PULLUP) ? 1 : 0);
 234:board/peripherals/pio/pio.c ****                 break;
 235:board/peripherals/pio/pio.c ****     
 236:board/peripherals/pio/pio.c ****             case PIO_INPUT:
 237:board/peripherals/pio/pio.c ****                 AT91C_BASE_PMC->PMC_PCER = 1 << list->id;
  41              		.loc 1 237 0
  42 000c 0150A013 		movne	r5, #1
  43 0010 0040E013 		mvnne	r4, #0
 220:board/peripherals/pio/pio.c ****     while (size > 0) {
  44              		.loc 1 220 0
  45 0014 1B00000A 		beq	.L25
  46              	.LVL2:
  47              	.L24:
 222:board/peripherals/pio/pio.c ****         switch (list->type) {
  48              		.loc 1 222 0
  49 0018 033050E5 		ldrb	r3, [r0, #-3]	@ zero_extendqisi2
  50 001c 040053E3 		cmp	r3, #4
  51 0020 03F19F97 		ldrls	pc, [pc, r3, asl #2]
  52 0024 3E0000EA 		b	.L26
  53              	.L8:
  54 0028 FC000000 		.word	.L4
  55 002c D4000000 		.word	.L5
  56 0030 90000000 		.word	.L6
  57 0034 3C000000 		.word	.L7
  58 0038 3C000000 		.word	.L7
  59              	.L7:
 238:board/peripherals/pio/pio.c ****                 PIO_SetInput(list->pio,
 239:board/peripherals/pio/pio.c ****                              list->mask,
 240:board/peripherals/pio/pio.c ****                              (list->attribute & PIO_PULLUP) ? 1 : 0,
 241:board/peripherals/pio/pio.c ****                              (list->attribute & PIO_DEGLITCH)? 1 : 0);
 242:board/peripherals/pio/pio.c ****                 break;
 243:board/peripherals/pio/pio.c ****     
 244:board/peripherals/pio/pio.c ****             case PIO_OUTPUT_0:
 245:board/peripherals/pio/pio.c ****             case PIO_OUTPUT_1:
 246:board/peripherals/pio/pio.c ****                 PIO_SetOutput(list->pio,
 247:board/peripherals/pio/pio.c ****                               list->mask,
 248:board/peripherals/pio/pio.c ****                               (list->type == PIO_OUTPUT_1),
 249:board/peripherals/pio/pio.c ****                               (list->attribute & PIO_OPENDRAIN) ? 1 : 0,
  60              		.loc 1 249 0
  61 003c 026050E5 		ldrb	r6, [r0, #-2]	@ zero_extendqisi2
 246:board/peripherals/pio/pio.c ****                 PIO_SetOutput(list->pio,
  62              		.loc 1 246 0
  63 0040 082010E5 		ldr	r2, [r0, #-8]
  64 0044 0CC010E5 		ldr	ip, [r0, #-12]
  65              	.LBB10:
  66              	.LBB11:
 170:board/peripherals/pio/pio.c ****     if (enablePullUp) {
  67              		.loc 1 170 0
  68 0048 010016E3 		tst	r6, #1
  69              	.LBE11:
  70              	.LBE10:
  71              		.loc 1 249 0
  72 004c 046006E2 		and	r6, r6, #4
  73              	.LVL3:
  74              	.LBB13:
  75              	.LBB12:
 167:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
  76              		.loc 1 167 0
  77 0050 44C082E5 		str	ip, [r2, #68]
 172:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
  78              		.loc 1 172 0
  79 0054 64C08215 		strne	ip, [r2, #100]
 176:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
  80              		.loc 1 176 0
  81 0058 60C08205 		streq	ip, [r2, #96]
 180:board/peripherals/pio/pio.c ****     if (enableMultiDrive) {
  82              		.loc 1 180 0
  83 005c 000056E3 		cmp	r6, #0
 182:board/peripherals/pio/pio.c ****         pio->PIO_MDER = mask;
  84              		.loc 1 182 0
  85 0060 50C08215 		strne	ip, [r2, #80]
 186:board/peripherals/pio/pio.c ****         pio->PIO_MDDR = mask;
  86              		.loc 1 186 0
  87 0064 54C08205 		streq	ip, [r2, #84]
 190:board/peripherals/pio/pio.c ****     if (defaultValue) {
  88              		.loc 1 190 0
  89 0068 040053E3 		cmp	r3, #4
 192:board/peripherals/pio/pio.c ****         pio->PIO_SODR = mask;
  90              		.loc 1 192 0
  91 006c 30C08205 		streq	ip, [r2, #48]
 196:board/peripherals/pio/pio.c ****         pio->PIO_CODR = mask;
  92              		.loc 1 196 0
  93 0070 34C08215 		strne	ip, [r2, #52]
 200:board/peripherals/pio/pio.c ****     pio->PIO_OER = mask;
  94              		.loc 1 200 0
  95 0074 10C082E5 		str	ip, [r2, #16]
 201:board/peripherals/pio/pio.c ****     pio->PIO_PER = mask;
  96              		.loc 1 201 0
  97 0078 00C082E5 		str	ip, [r2, #0]
  98              	.LVL4:
  99              	.L11:
 100              	.LBE12:
 101              	.LBE13:
 220:board/peripherals/pio/pio.c ****     while (size > 0) {
 102              		.loc 1 220 0
 103 007c 011051E2 		subs	r1, r1, #1
 104              	.LVL5:
 105 0080 0C0080E2 		add	r0, r0, #12
 106 0084 E3FFFF1A 		bne	.L24
 107              	.L25:
 250:board/peripherals/pio/pio.c ****                               (list->attribute & PIO_PULLUP) ? 1 : 0);
 251:board/peripherals/pio/pio.c ****                 break;
 252:board/peripherals/pio/pio.c ****     
 253:board/peripherals/pio/pio.c ****             default: return 0;
 254:board/peripherals/pio/pio.c ****         }
 255:board/peripherals/pio/pio.c **** 
 256:board/peripherals/pio/pio.c ****         list++;
 257:board/peripherals/pio/pio.c ****         size--;
 258:board/peripherals/pio/pio.c ****     }
 259:board/peripherals/pio/pio.c **** 
 260:board/peripherals/pio/pio.c ****     return 1;
 108              		.loc 1 260 0
 109 0088 0100A0E3 		mov	r0, #1
 110 008c 250000EA 		b	.L3
 111              	.L6:
 237:board/peripherals/pio/pio.c ****                 AT91C_BASE_PMC->PMC_PCER = 1 << list->id;
 112              		.loc 1 237 0
 113 0090 043050E5 		ldrb	r3, [r0, #-4]	@ zero_extendqisi2
 114 0094 1533A0E1 		mov	r3, r5, asl r3
 115 0098 EF3304E5 		str	r3, [r4, #-1007]
 238:board/peripherals/pio/pio.c ****                 PIO_SetInput(list->pio,
 116              		.loc 1 238 0
 117 009c 0C2040E2 		sub	r2, r0, #12
 240:board/peripherals/pio/pio.c ****                              (list->attribute & PIO_PULLUP) ? 1 : 0,
 118              		.loc 1 240 0
 119 00a0 02C050E5 		ldrb	ip, [r0, #-2]	@ zero_extendqisi2
 238:board/peripherals/pio/pio.c ****                 PIO_SetInput(list->pio,
 120              		.loc 1 238 0
 121 00a4 0C0092E8 		ldmia	r2, {r2, r3}
 122              	.LBB14:
 123              	.LBB15:
 124:board/peripherals/pio/pio.c ****     if (enablePullUp) {
 124              		.loc 1 124 0
 125 00a8 01001CE3 		tst	ip, #1
 126              	.LBE15:
 127              	.LBE14:
 241:board/peripherals/pio/pio.c ****                              (list->attribute & PIO_DEGLITCH)? 1 : 0);
 128              		.loc 1 241 0
 129 00ac 02C00CE2 		and	ip, ip, #2
 130              	.LVL6:
 131              	.LBB17:
 132              	.LBB16:
 121:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
 133              		.loc 1 121 0
 134 00b0 442083E5 		str	r2, [r3, #68]
 126:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
 135              		.loc 1 126 0
 136 00b4 64208315 		strne	r2, [r3, #100]
 130:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
 137              		.loc 1 130 0
 138 00b8 60208305 		streq	r2, [r3, #96]
 134:board/peripherals/pio/pio.c ****     if (enableFilter) {
 139              		.loc 1 134 0
 140 00bc 00005CE3 		cmp	ip, #0
 136:board/peripherals/pio/pio.c ****         pio->PIO_IFER = mask;
 141              		.loc 1 136 0
 142 00c0 20208315 		strne	r2, [r3, #32]
 140:board/peripherals/pio/pio.c ****         pio->PIO_IFDR = mask;
 143              		.loc 1 140 0
 144 00c4 24208305 		streq	r2, [r3, #36]
 144:board/peripherals/pio/pio.c ****     pio->PIO_ODR = mask;
 145              		.loc 1 144 0
 146 00c8 142083E5 		str	r2, [r3, #20]
 145:board/peripherals/pio/pio.c ****     pio->PIO_PER = mask;
 147              		.loc 1 145 0
 148 00cc 002083E5 		str	r2, [r3, #0]
 149 00d0 E9FFFFEA 		b	.L11
 150              	.LVL7:
 151              	.L5:
 152              	.LBE16:
 153              	.LBE17:
 233:board/peripherals/pio/pio.c ****                                    (list->attribute & PIO_PULLUP) ? 1 : 0);
 154              		.loc 1 233 0
 155 00d4 02C050E5 		ldrb	ip, [r0, #-2]	@ zero_extendqisi2
 231:board/peripherals/pio/pio.c ****                 PIO_SetPeripheralB(list->pio,
 156              		.loc 1 231 0
 157 00d8 0C2040E2 		sub	r2, r0, #12
 158 00dc 0C0092E8 		ldmia	r2, {r2, r3}
 159              	.LVL8:
 160              	.LBB18:
 161              	.LBB19:
  91:board/peripherals/pio/pio.c ****     if (enablePullUp) {
 162              		.loc 1 91 0
 163 00e0 01001CE3 		tst	ip, #1
  88:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
 164              		.loc 1 88 0
 165 00e4 442083E5 		str	r2, [r3, #68]
  93:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
 166              		.loc 1 93 0
 167 00e8 64208315 		strne	r2, [r3, #100]
  97:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
 168              		.loc 1 97 0
 169 00ec 60208305 		streq	r2, [r3, #96]
 101:board/peripherals/pio/pio.c ****     pio->PIO_BSR = mask;
 170              		.loc 1 101 0
 171 00f0 742083E5 		str	r2, [r3, #116]
 102:board/peripherals/pio/pio.c ****     pio->PIO_PDR = mask;
 172              		.loc 1 102 0
 173 00f4 042083E5 		str	r2, [r3, #4]
 174 00f8 DFFFFFEA 		b	.L11
 175              	.LVL9:
 176              	.L4:
 177              	.LBE19:
 178              	.LBE18:
 227:board/peripherals/pio/pio.c ****                                    (list->attribute & PIO_PULLUP) ? 1 : 0);
 179              		.loc 1 227 0
 180 00fc 02C050E5 		ldrb	ip, [r0, #-2]	@ zero_extendqisi2
 225:board/peripherals/pio/pio.c ****                 PIO_SetPeripheralA(list->pio,
 181              		.loc 1 225 0
 182 0100 0C2040E2 		sub	r2, r0, #12
 183 0104 0C0092E8 		ldmia	r2, {r2, r3}
 184              	.LVL10:
 185              	.LBB20:
 186              	.LBB21:
  59:board/peripherals/pio/pio.c ****     if (enablePullUp) {
 187              		.loc 1 59 0
 188 0108 01001CE3 		tst	ip, #1
  56:board/peripherals/pio/pio.c ****     pio->PIO_IDR = mask;
 189              		.loc 1 56 0
 190 010c 442083E5 		str	r2, [r3, #68]
  61:board/peripherals/pio/pio.c ****         pio->PIO_PPUER = mask;
 191              		.loc 1 61 0
 192 0110 64208315 		strne	r2, [r3, #100]
  65:board/peripherals/pio/pio.c ****         pio->PIO_PPUDR = mask;
 193              		.loc 1 65 0
 194 0114 60208305 		streq	r2, [r3, #96]
  69:board/peripherals/pio/pio.c ****     pio->PIO_ASR = mask;
 195              		.loc 1 69 0
 196 0118 702083E5 		str	r2, [r3, #112]
  70:board/peripherals/pio/pio.c ****     pio->PIO_PDR = mask;
 197              		.loc 1 70 0
 198 011c 042083E5 		str	r2, [r3, #4]
 199 0120 D5FFFFEA 		b	.L11
 200              	.LVL11:
 201              	.L26:
 202              	.LBE21:
 203              	.LBE20:
 253:board/peripherals/pio/pio.c ****             default: return 0;
 204              		.loc 1 253 0
 205 0124 0000A0E3 		mov	r0, #0
 206              	.L3:
 261:board/peripherals/pio/pio.c **** }
 207              		.loc 1 261 0
 208 0128 7000BDE8 		ldmfd	sp!, {r4, r5, r6}
 209 012c 1EFF2FE1 		bx	lr
 210              		.cfi_endproc
 211              	.LFE287:
 213              		.align	2
 214              		.global	PIO_Set
 216              	PIO_Set:
 217              	.LFB288:
 262:board/peripherals/pio/pio.c **** 
 263:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 264:board/peripherals/pio/pio.c **** /// Sets a high output level on all the PIOs defined in the given Pin instance.
 265:board/peripherals/pio/pio.c **** /// This has no immediate effects on PIOs that are not output, but the PIO
 266:board/peripherals/pio/pio.c **** /// controller will memorize the value they are changed to outputs.
 267:board/peripherals/pio/pio.c **** /// \param pin  Pointer to a Pin instance describing one or more pins.
 268:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 269:board/peripherals/pio/pio.c **** void PIO_Set(const Pin *pin)
 270:board/peripherals/pio/pio.c **** {
 218              		.loc 1 270 0
 219              		.cfi_startproc
 220              		@ Function supports interworking.
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL12:
 271:board/peripherals/pio/pio.c ****     pin->pio->PIO_SODR = pin->mask;
 225              		.loc 1 271 0
 226 0130 0C0090E8 		ldmia	r0, {r2, r3}
 227 0134 302083E5 		str	r2, [r3, #48]
 228 0138 1EFF2FE1 		bx	lr
 229              		.cfi_endproc
 230              	.LFE288:
 232              		.align	2
 233              		.global	PIO_Clear
 235              	PIO_Clear:
 236              	.LFB289:
 272:board/peripherals/pio/pio.c **** }
 273:board/peripherals/pio/pio.c **** 
 274:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 275:board/peripherals/pio/pio.c **** /// Sets a low output level on all the PIOs defined in the given Pin instance.
 276:board/peripherals/pio/pio.c **** /// This has no immediate effects on PIOs that are not output, but the PIO
 277:board/peripherals/pio/pio.c **** /// controller will memorize the value they are changed to outputs.
 278:board/peripherals/pio/pio.c **** /// \param pin  Pointer to a Pin instance describing one or more pins.
 279:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 280:board/peripherals/pio/pio.c **** void PIO_Clear(const Pin *pin)
 281:board/peripherals/pio/pio.c **** {
 237              		.loc 1 281 0
 238              		.cfi_startproc
 239              		@ Function supports interworking.
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              	.LVL13:
 282:board/peripherals/pio/pio.c ****     pin->pio->PIO_CODR = pin->mask;
 244              		.loc 1 282 0
 245 013c 0C0090E8 		ldmia	r0, {r2, r3}
 246 0140 342083E5 		str	r2, [r3, #52]
 247 0144 1EFF2FE1 		bx	lr
 248              		.cfi_endproc
 249              	.LFE289:
 251              		.align	2
 252              		.global	PIO_Get
 254              	PIO_Get:
 255              	.LFB290:
 283:board/peripherals/pio/pio.c **** }
 284:board/peripherals/pio/pio.c **** 
 285:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 286:board/peripherals/pio/pio.c **** /// Returns 1 if one or more PIO of the given Pin instance currently have a high
 287:board/peripherals/pio/pio.c **** /// level; otherwise returns 0. This method returns the actual value that is
 288:board/peripherals/pio/pio.c **** /// being read on the pin. To return the supposed output value of a pin, use
 289:board/peripherals/pio/pio.c **** /// PIO_GetOutputDataStatus() instead.
 290:board/peripherals/pio/pio.c **** /// \param pin  Pointer to a Pin instance describing one or more pins.
 291:board/peripherals/pio/pio.c **** /// \return 1 if the Pin instance contains at least one PIO that currently has
 292:board/peripherals/pio/pio.c **** /// a high level; otherwise 0.
 293:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 294:board/peripherals/pio/pio.c **** unsigned char PIO_Get(const Pin *pin)
 295:board/peripherals/pio/pio.c **** {
 256              		.loc 1 295 0
 257              		.cfi_startproc
 258              		@ Function supports interworking.
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262              	.LVL14:
 296:board/peripherals/pio/pio.c ****     unsigned int reg;
 297:board/peripherals/pio/pio.c ****     if ((pin->type == PIO_OUTPUT_0) || (pin->type == PIO_OUTPUT_1)) {
 263              		.loc 1 297 0
 264 0148 0930D0E5 		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 265 014c 033043E2 		sub	r3, r3, #3
 266 0150 010053E3 		cmp	r3, #1
 298:board/peripherals/pio/pio.c **** 
 299:board/peripherals/pio/pio.c ****         reg = pin->pio->PIO_ODSR;
 267              		.loc 1 299 0
 268 0154 043090E5 		ldr	r3, [r0, #4]
 269 0158 38209395 		ldrls	r2, [r3, #56]
 270              	.LVL15:
 300:board/peripherals/pio/pio.c ****     }
 301:board/peripherals/pio/pio.c ****     else {
 302:board/peripherals/pio/pio.c **** 
 303:board/peripherals/pio/pio.c ****         reg = pin->pio->PIO_PDSR;
 271              		.loc 1 303 0
 272 015c 3C209385 		ldrhi	r2, [r3, #60]
 273              	.LVL16:
 304:board/peripherals/pio/pio.c ****     }
 305:board/peripherals/pio/pio.c **** 
 306:board/peripherals/pio/pio.c ****     if ((reg & pin->mask) == 0) {
 274              		.loc 1 306 0
 275 0160 003090E5 		ldr	r3, [r0, #0]
 276 0164 030012E1 		tst	r2, r3
 307:board/peripherals/pio/pio.c **** 
 308:board/peripherals/pio/pio.c ****         return 0;
 309:board/peripherals/pio/pio.c ****     }
 310:board/peripherals/pio/pio.c ****     else {
 311:board/peripherals/pio/pio.c **** 
 312:board/peripherals/pio/pio.c ****         return 1;
 313:board/peripherals/pio/pio.c ****     }
 314:board/peripherals/pio/pio.c **** }
 277              		.loc 1 314 0
 278 0168 0000A003 		moveq	r0, #0
 279 016c 0100A013 		movne	r0, #1
 280              	.LVL17:
 281 0170 1EFF2FE1 		bx	lr
 282              		.cfi_endproc
 283              	.LFE290:
 285              		.align	2
 286              		.global	PIO_GetOutputDataStatus
 288              	PIO_GetOutputDataStatus:
 289              	.LFB291:
 315:board/peripherals/pio/pio.c **** 
 316:board/peripherals/pio/pio.c **** 
 317:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 318:board/peripherals/pio/pio.c **** /// Returns 1 if one or more PIO of the given Pin are configured to output a
 319:board/peripherals/pio/pio.c **** /// high level (even if they are not output).
 320:board/peripherals/pio/pio.c **** /// To get the actual value of the pin, use PIO_Get() instead.
 321:board/peripherals/pio/pio.c **** /// \param pin  Pointer to a Pin instance describing one or more pins.
 322:board/peripherals/pio/pio.c **** /// \return 1 if the Pin instance contains at least one PIO that is configured
 323:board/peripherals/pio/pio.c **** /// to output a high level; otherwise 0.
 324:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 325:board/peripherals/pio/pio.c **** unsigned char PIO_GetOutputDataStatus(const Pin *pin)
 326:board/peripherals/pio/pio.c **** {
 290              		.loc 1 326 0
 291              		.cfi_startproc
 292              		@ Function supports interworking.
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296              	.LVL18:
 327:board/peripherals/pio/pio.c ****     if ((pin->pio->PIO_ODSR & pin->mask) == 0) {
 297              		.loc 1 327 0
 298 0174 042090E5 		ldr	r2, [r0, #4]
 299 0178 003090E5 		ldr	r3, [r0, #0]
 300 017c 382092E5 		ldr	r2, [r2, #56]
 301 0180 030012E1 		tst	r2, r3
 328:board/peripherals/pio/pio.c **** 
 329:board/peripherals/pio/pio.c ****         return 0;
 330:board/peripherals/pio/pio.c ****     }
 331:board/peripherals/pio/pio.c ****     else {
 332:board/peripherals/pio/pio.c **** 
 333:board/peripherals/pio/pio.c ****         return 1;
 334:board/peripherals/pio/pio.c ****     }
 335:board/peripherals/pio/pio.c **** }
 302              		.loc 1 335 0
 303 0184 0000A003 		moveq	r0, #0
 304 0188 0100A013 		movne	r0, #1
 305              	.LVL19:
 306 018c 1EFF2FE1 		bx	lr
 307              		.cfi_endproc
 308              	.LFE291:
 310              		.align	2
 311              		.global	PIO_GetISR
 313              	PIO_GetISR:
 314              	.LFB292:
 336:board/peripherals/pio/pio.c **** 
 337:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 338:board/peripherals/pio/pio.c **** /// Returns the value of ISR for the PIO controller of the pin.
 339:board/peripherals/pio/pio.c **** /// Reading this register acknoledges all the ITs.
 340:board/peripherals/pio/pio.c **** /// \param pin  Pointer to a Pin instance describing one or more pins.
 341:board/peripherals/pio/pio.c **** //------------------------------------------------------------------------------
 342:board/peripherals/pio/pio.c **** unsigned int PIO_GetISR(const Pin *pin)
 343:board/peripherals/pio/pio.c **** {
 315              		.loc 1 343 0
 316              		.cfi_startproc
 317              		@ Function supports interworking.
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321              	.LVL20:
 344:board/peripherals/pio/pio.c ****     return (pin->pio->PIO_ISR);
 322              		.loc 1 344 0
 323 0190 043090E5 		ldr	r3, [r0, #4]
 324 0194 4C0093E5 		ldr	r0, [r3, #76]
 325              	.LVL21:
 345:board/peripherals/pio/pio.c **** }
 326              		.loc 1 345 0
 327 0198 1EFF2FE1 		bx	lr
 328              		.cfi_endproc
 329              	.LFE292:
 331              	.Letext0:
 332              		.file 2 "board/AT91SAM7S256.h"
 333              		.file 3 "board/peripherals/pio/pio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pio.c
     /tmp/ccHZlwKu.s:16     .text:0000000000000000 $a
     /tmp/ccHZlwKu.s:19     .text:0000000000000000 PIO_Configure
     /tmp/ccHZlwKu.s:54     .text:0000000000000028 $d
     /tmp/ccHZlwKu.s:61     .text:000000000000003c $a
     /tmp/ccHZlwKu.s:216    .text:0000000000000130 PIO_Set
     /tmp/ccHZlwKu.s:235    .text:000000000000013c PIO_Clear
     /tmp/ccHZlwKu.s:254    .text:0000000000000148 PIO_Get
     /tmp/ccHZlwKu.s:288    .text:0000000000000174 PIO_GetOutputDataStatus
     /tmp/ccHZlwKu.s:313    .text:0000000000000190 PIO_GetISR
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
